caer
====

AER event-based framework, written in C, targeting embedded systems.

REQUIREMENTS:

Linux, MacOS X or Windows (for Windows build instructions see README.Windows)
cmake >= 2.6
gcc >= 5.2 or clang >= 3.6
libcaer >= 2.0.1
mini-xml (mxml) >= 2.7
libuv >= 1.7.5
Optional: libpng >= 1.6 (input/output frame PNG compression)
Optional: tcmalloc >= 2.2 (faster memory allocation)
Optional: allegro5 >= 5.0.11 (visualizer module)
Optional: OpenCV >= 3.1 (cameracalibration, poseestimation modules)

INSTALLATION:

1) configure: 

$ cmake . 

One of the following options is required to select a device:
 -DDVS128=1           - set dvs128 (for DVS128 model)
 -DDAVISFX2=1         - set davisfx2 (for DAVIS240A/B/C models)
 -DDAVISFX3=1         - set davisfx3 (for FX3 platform models)

Optional input/output modules:
 -DENABLE_FILE_INPUT=1
 -DENABLE_NETWORK_INPUT=1
 -DENABLE_FILE_OUTPUT=1
 -DENABLE_NETWORK_OUTPUT=1

NB: in the example mainloop (contained in the main.c file) only one input device can be active per time,
    in addition at least one input device must be enabled (ie. one camera input device OR an input stream from network)

Optional modules:
 -DENABLE_BAFILTER=1    - enable background activity filter module
 -DENABLE_STATISTICS=1  - enable console statistics module
 -DENABLE_VISUALIZER=1  - enable visualizer module
 -DENABLE_IMAGEGENERATOR=1 - enable image generator
 -DENABLE_CAMERACALIBRATION=1 - enable camera calibration this requires OpenCV 3.1.0 to be installed - 
 -DENABLE_POSEESTIMATION=1 - enable camera pose estimation, this requires OpenCV 3.1.0 with extra modules from https://github.com/Itseez/opencv_contrib -
 -DENABLE_CAFFEINTERFACE=1 - Caffe interface to cAER, deep learning framework - https://github.com/BVLC/caffe - 

		A custom location can be specified for the caffe library using Caffe_DIRECTORY 

		This module depends on the imagegenerator module  (ie. it requires -DENABLE_IMAGEGENERATOR=1)
		It also requires Caffe installed as well as Boost/OpenCV/Protobuffer (same as Caffe).
		You can load deep networks that have been trained with Caffe (like alexnet/caffenet/vgg etc.)

		This module can be configured by editing the file: 
			"module/caffeinterface/settings.h"
		-DCAFFE_CPU_ONLY=1 - to use the Caffe framework with CPU only (ie. no GPU)
		-DCaffe_DIRECTORY=<caffe dir>  - to define custom caffe installation folder 

 -DENABLE_NULLHOPINTERFACE=1    - this module enable software or hardware interface to the nullhop architecture
				This module can be configured with the following options:
				-DFPGA_MODE=1 enable FPGA SoC mode
				-DENABLE_RESULT_MONITOR=1 enable printing of results for both FPGA and or software
				-DSOFTWARE_ONLY_MODE=1 emulates hw computation in sw

 -DENABLE_IMAGESTREAMERBEEPER=1 - this module produces beeps based on classification results 

2) build:

$ make

3) install:

$ make install

USAGE:

$ caer-bin (see docs/ for more info on how to use cAER)
$ caer-ctl (run-time settings control program, optional)
